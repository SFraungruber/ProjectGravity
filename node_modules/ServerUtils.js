/**
 * Created by SFraungruber on 20.05.2015.
 */


(function() {

    const GAME_LIST = [{id:0, name:"Ping Pong", player:2}, {id:2, name:"Space Invaders" ,player:1}];
    const MONGO_LOG = false;
    const CHECK_TIME_INTERVAL = 5 * 60 * 1000;

    // Hashmap
    var HashMap = require('hashmap');
    var socketsAndPins = new HashMap();


    if(MONGO_LOG){
        var mongodb = require('mongodb');
        var MongoClient = mongodb.MongoClient;
        var mongoUrl = 'mongodb://localhost:27017/project_gravity';
    }

    // generate a pin,
    // params:
    //      - lenght: is the count of the characters of the return-string
    //      - numbersOnly: return only numbers or return numbers and letters
    function generateUniquePin(length, numbersOnly) {
        var text = "";
        var possible;

        if(numbersOnly){
            possible = "0123456789";
        }else{
            possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        }

        for( var i=0; i < length; i++ ){
            text += possible.charAt(Math.floor(Math.random() * possible.length));
        }
        return text;
    }

    // Logs the message and the current sysdate to the console and to the mongoDB if it is activated and installed
    function logMsg(msg){
        var date = new Date();
        console.log(date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate() + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() +  ": " + msg);


        // log to mongoDB if it is activated
        if(MONGO_LOG){
            MongoClient.connect(mongoUrl, function (err, db) {
                if (err) {
                    console.log('Unable to connect to the mongoDB server. Error:', err);
                } else {
                    var collection = db.collection('Running_Log');
                    var log = {time: date, msg: msg};
                    collection.insert([log], function (err, result) {
                        if (err) {
                            console.log(err);
                        } else {
                        }
                        db.close();
                    });
                }
            });
        }
    }

    module.exports.GenerateUniquePin = function() {
        return generateUniquePin(5, true);
    }

    module.exports.LogMsg = function(msg) {
        logMsg(msg);
    }
    module.exports.GameList = function(){
        return GAME_LIST;
    }
    module.exports.CheckTimeInterval = function(){
        return CHECK_TIME_INTERVAL;
    }
    module.exports.SocketsAndPins = function(){
        return socketsAndPins;
    }

    // convert the JSON-string to an object
    module.exports.JSONparse = function(json){
        return JSONparse(json);
    }
    // convert the object to and JSON-string
    module.exports.JSONstringify = function(object){
        return JSONstringify(object);
    }

    // sends a notConnected event to the socket
    module.exports.NotConnectedError = function(socket){
        var object = {type:'notConnected', content:null};
        return socket.emit('event', JSONstringify(object));
    }

    // check if the socket is a valid socket
    module.exports.IsSocketValid = function(socket){
        if( typeof(socket) !== "undefined" && socket !== null ){
            return true;
        }else{
            return false;
        }
    }
}());


// convert the JSONs
function JSONparse(json){
    json = json.replace(/;/g, '"');
    return JSON.parse(json);
}
function JSONstringify(object){
    var json = JSON.stringify(object);
    return json.replace(/"/g, ';');
}